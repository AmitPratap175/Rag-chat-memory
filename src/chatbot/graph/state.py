from typing import List
from langgraph.graph import MessagesState


class AICompanionState(MessagesState):
    """State class for the AI Companion workflow.

    Extends MessagesState to track conversation history and maintains the last message received.

    Attributes:
        last_message (AnyMessage): The most recent message in the conversation, can be any valid
            LangChain message type (HumanMessage, AIMessage, etc.)
        memory_context (str): The context of the memories to be injected into the character card.
        rag_context (List[str]): The retrieved documents for RAG.
        candidate_answer (str): The candidate answer generated by the RAG loop.
        query_history (List[str]): The history of queries used in the RAG loop.
        rag_attempts (int): The number of attempts in the RAG loop.
        requires_rag (bool): Whether the query requires RAG.
        is_sufficient (bool): Whether the candidate answer is sufficient.
        corrected_query (str): The corrected query for the next RAG iteration.
    """

    summary: str
    memory_context: str
    rag_context: List[str]
    candidate_answer: str
    query_history: List[str]
    rag_attempts: int
    requires_rag: bool
    is_sufficient: bool
    corrected_query: str
